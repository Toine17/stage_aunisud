import streamlit as st
import pandas as pd

df_parcours = pd.read_csv("parcours.csv")


menu = st.sidebar.radio(
    "Menu",
    ["Accueil", "Programme", "Infos pratiques", "Parcours"]
)

# ACCUEIL #############################

if menu == "Accueil":
    st.subheader("üî¥‚ö´Bienvenue sur la page du stage Aunisud triathlon 2025 ")
    st.write("Nous serons 16 participants au stage cette ann√©e")
    st.write("Direction le Pays Basque espagnol du 29 mai au 1er juin")
    st.write("Le menu est √† ouvrir sur la gauche de l'√©cran")
    st.image("groupe_accueil.jpg")

# PROGRAMME #############################

elif menu == "Programme":
    st.subheader("D√©roul√© du stage")
    jour = st.selectbox("Choix de la journ√©e" , ["Jour 1","Jour 2","Jour 3","Jour 4"])
    if jour == "Jour 1":
        st.write("üöô D√©part de la piscine de Surg√®res avec 2 minibus, heure √† d√©finir ‚è±Ô∏è")
        st.write("Trajet jusqu'en d√©but d'apr√®s-midi, pr√©voir un pique-nique ü•™")
        st.write("Arriv√©e au g√Æte, üö¥‚Äç‚ôÇÔ∏è premi√®re sortie v√©lo de 48 km avec 1000 m D+")
        st.write("üëï Pr√©voir la tenue du club pour la photo de groupe du stage")
        st.write("Parcours")
        st.image("map_jour_1.jpg")
        st.write("Profil")
        st.image("Profil_jour_1.jpg")
        dropbox_link_1 = "https://www.dropbox.com/scl/fi/4f85nhlffifvurx1i3ntn/Jour-1.gpx?rlkey=ds6h3gw7yy8ex0g7jwnu1j3aa&st=nhe3wcqc&dl=1"
        st.markdown(f"[üì• T√©l√©charger le GPX]({dropbox_link_1})", unsafe_allow_html=True)
    if jour == "Jour 2":
        st.write("üö¥‚Äç‚ôÇÔ∏è Sortie longue √† v√©lo, 2 groupes pour 2 distances avec d√©part en commun")
        st.write("Les 45 premiers kilom√®tres sont communs aux 2 groupes")
        col1, col2 = st.columns(2)

        with col1:
            st.header("Version courte")
            st.write("65km pour 1550m D+")
            st.write("Parcours")
            st.image("map_jour_2_courte.jpg")
            st.write("Profil")
            st.image("Profil_jour_2_courte.jpg")
            dropbox_link_2_courte = "https://www.dropbox.com/scl/fi/7u6xlbv5ffxwhv4ofuryq/Jour-2-courte.gpx?rlkey=xk0k76z7o1dojs7ph2252h0qm&st=kvti2r3m&dl=1"
            st.markdown(f"[üì• T√©l√©charger le GPX]({dropbox_link_2_courte})", unsafe_allow_html=True)

        with col2:
            st.header("Version longue")
            st.write("92km pour 2150m D+")
            st.write("Parcours")
            st.image("map_jour_2_longue.jpg")
            st.write("Profil")
            st.image("Profil_jour_2_longue.jpg")
            dropbox_link_2_longue = "https://www.dropbox.com/scl/fi/tarqflt0pd8nxyfh3qlqa/jour-2-longue.gpx?rlkey=dkod75gqul3nj54bypixpjvhy&st=ks2b427d&dl=1"
            st.markdown(f"[üì• T√©l√©charger le GPX]({dropbox_link_2_longue})", unsafe_allow_html=True)

    if jour == "Jour 3":
            st.write("En autonomie, plusieurs parcours sont disponibles dans la section Parcours üõ£Ô∏è")
            st.write("Natation en mer en fin de journ√©e √† la plage de ZarautzüèäüèñÔ∏è")

    if jour == "Jour 4":
            st.write("Courte activit√© le matin en autonomie")
            st.write("üöô D√©part du g√Æte en fin de matin√©e pour retour √† Surg√®res en fin de journ√©e")

# INFO PRATIQUES ############################# 

elif menu == "Infos pratiques":
    st.subheader("üè® Logement")
    st.write("Il se peut que nous ne soyons pas seuls dans le logement.")
    lien_logement = "https://www.gites.fr/gites_saskarate_asteasu_h5496447.htm"
    st.write("4 chambres triples, 1 chambre quadruple üõèÔ∏è")
    st.write("Selon l'agencement des chambres, nous essayerons de d√©placer un lit pour cr√©er une chambre double pour les filles et une deuxi√®me chambre quadruple")
    st.markdown(f"[Ici les informations sur le logement]({lien_logement})", unsafe_allow_html=True)
    
    st.subheader("üèä Natation")
    st.write("La plage de Zarautz est √† 30 minutes en voiture et la piscine municipale d'Aya √† 17 minutes.")
    
    st.subheader(" üèÉ‚Äç‚ôÄÔ∏èCourse √† pied")
    st.write("Pas de parcours trac√© mais un beau terrain de jeu trail √† disposition ‚õ∞Ô∏è")

    st.subheader(" üìÑAdministratif")
    st.write("ü™™ Carte Europ√©enne d‚ÄôAssurance Maladie (CEAM). Elle n‚Äôest pas obligatoire, mais ceux qui √©taient pr√©sents l‚Äôan dernier savent que √ßa peut √™tre tr√®s utile en cas de besoin üè•üá™üá∫. üëâ Pensez √† en faire la demande !")
    lien_carte_eu = "https://www.ameli.fr/charente-maritime/assure/adresses-et-contacts/votre-carte-vitale-appli-carte-vitale-carte-europeenne-d-assurance-maladie-ceam/commander-une-carte-europeenne-d-assurance-maladie-ceam"
    st.markdown(f"[Tu peux la demander sur ce lien]({lien_carte_eu})", unsafe_allow_html=True)

# PARCOURS ############################# 

elif menu == "Parcours":
    st.subheader("üö¥‚Äç‚ôÇÔ∏è Parcours v√©lo")
    distance_min = df_parcours["Kilometres"].min()
    distance_max = df_parcours["Kilometres"].max()
    val_min, val_max = st.slider("Choisis une plage de nombre de kilom√®tres :", min_value= distance_min, max_value= distance_max, value=(distance_min, distance_max))
    df_choix = df_parcours.loc[(df_parcours["Kilometres"]>= val_min) & (df_parcours["Kilometres"]<= val_max)].reset_index(drop = True)
    #st.write(df_choix)
    nb_parcours = df_choix.shape[0]
    if nb_parcours != 0 :
        st.write(f"Il y a {nb_parcours} parcours trouv√©s")
        list_nb_parcours = range(1,nb_parcours+1)
        st.write(f"1Ô∏è‚É£ long de {df_choix["Kilometres"].iloc[0]}km pour {df_choix["Denivele"].iloc[0]}mD+")
        if nb_parcours >= 2 :
            st.write(f"2Ô∏è‚É£ long de {df_choix["Kilometres"].iloc[1]}km pour {df_choix["Denivele"].iloc[1]}mD+")
        if nb_parcours >= 3 :
            st.write(f"3Ô∏è‚É£ long de {df_choix["Kilometres"].iloc[2]}km pour {df_choix["Denivele"].iloc[2]}mD+")
        if nb_parcours >= 4 :
            st.write(f"4Ô∏è‚É£ long de {df_choix["Kilometres"].iloc[3]}km pour {df_choix["Denivele"].iloc[3]}mD+")
        if nb_parcours >= 5 :
            st.write(f"5Ô∏è‚É£ long de {df_choix["Kilometres"].iloc[4]}km pour {df_choix["Denivele"].iloc[4]}mD+")
        if nb_parcours >= 6 :
            st.write(f"6Ô∏è‚É£ long de {df_choix["Kilometres"].iloc[5]}km pour {df_choix["Denivele"].iloc[5]}mD+")
        if nb_parcours >= 7 :
            st.write(f"7Ô∏è‚É£ long de {df_choix["Kilometres"].iloc[6]}km pour {df_choix["Denivele"].iloc[6]}mD+")
        if nb_parcours >= 8 :
            st.write(f"8Ô∏è‚É£ long de {df_choix["Kilometres"].iloc[7]}km pour {df_choix["Denivele"].iloc[7]}mD+")
        if nb_parcours >= 9 :
            st.write(f"9Ô∏è‚É£ long de {df_choix["Kilometres"].iloc[8]}km pour {df_choix["Denivele"].iloc[8]}mD+")

        
        choix = st.selectbox("Choisis le parcours que tu veux visualiser", list_nb_parcours)

        st.write("Parcours")
        st.image(f"{df_choix["Map"].iloc[choix-1]}")
        st.write("Profil")
        st.image(f"{df_choix["Profil"].iloc[choix-1]}")
        dropbox_link = df_choix["Lien"].iloc[choix-1]
        st.markdown(f"[üì• T√©l√©charger le GPX]({dropbox_link})", unsafe_allow_html=True)


    else :
        st.write("‚ùå Pas de parcours avec ce kilom√©trage ‚ùå")
    